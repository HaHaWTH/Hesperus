buildscript {
    repositories {
        jcenter()

        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.minecraftforge.net' }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = "me.jellysquid.mods"

if (System.getenv("BUILD_NUMBER") != null) {
    version = "${minecraft_version}-${mod_version}+build${System.getenv("BUILD_NUMBER")}"
} else {
    version = "${minecraft_version}-${mod_version}-SNAPSHOT"
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {

            jvmArg "-Dfml.coreMods.load=me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            jvmArg "-Dfml.coreMods.load=me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven {
        url "https://www.cursemaven.com"
    }
    flatDir {
        dirs "libs"
    }
    mavenLocal()
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"
    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")
    compileOnly("org.spongepowered:spongeapi:7.4.0")
    compileOnly("org.spongepowered:mixin:0.8.5") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
    compileOnly fg.deobf("curse.maven:dynamiclights-227874:2563244")
    compileOnly fg.deobf("curse.maven:sel-341845:3024600")
    compileOnly fg.deobf("curse.maven:mixinbooter-419286:3687785")
    runtimeOnly fg.deobf("curse.maven:mixinbooter-419286:3687785")
    runtimeOnly "re:witchery:0.5.2.4"
    runtimeOnly "tt:tp:1.0.1.1"
}

def coreModManifest = {
    attributes "FMLAT": "phosphor_at.cfg"
    attributes "Maven-Artifact": "${group}:${name}:${version}"
    attributes "FMLCorePlugin": "me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
    attributes "FMLCorePluginContainsFMLMod": true
    attributes "ForceLoadAsMod": true
}

jar {
    classifier = 'universal'

    manifest coreModManifest

    from sourceSets.main.output

    rename '(.+_at.cfg)', 'META-INF/$1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'

    manifest coreModManifest

    from sourceSets.main.allSource
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': "1.12.2"
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "mixins.phosphor.refmap.json"
    disableAnnotationProcessorCheck()
}

build.dependsOn sourcesJar
